// Code generated by goctl. DO NOT EDIT.
// Source: goods.proto

package server

import (
	"context"

	"zero-mall/service/goods_svc/internal/logic"
	"zero-mall/service/goods_svc/internal/svc"
	"zero-mall/service/goods_svc/types/goods"
)

type GoodsServer struct {
	svcCtx *svc.ServiceContext
	goods.UnimplementedGoodsServer
}

func NewGoodsServer(svcCtx *svc.ServiceContext) *GoodsServer {
	return &GoodsServer{
		svcCtx: svcCtx,
	}
}

// 商品接口
func (s *GoodsServer) GoodsList(ctx context.Context, in *goods.GoodsFilterRequest) (*goods.GoodsListResponse, error) {
	l := logic.NewGoodsListLogic(ctx, s.svcCtx)
	return l.GoodsList(in)
}

func (s *GoodsServer) BatchGetGoods(ctx context.Context, in *goods.BatchGoodsIdInfo) (*goods.GoodsListResponse, error) {
	l := logic.NewBatchGetGoodsLogic(ctx, s.svcCtx)
	return l.BatchGetGoods(in)
}

func (s *GoodsServer) CreateGoods(ctx context.Context, in *goods.CreateGoodsInfo) (*goods.GoodsInfoResponse, error) {
	l := logic.NewCreateGoodsLogic(ctx, s.svcCtx)
	return l.CreateGoods(in)
}

func (s *GoodsServer) DeleteGoods(ctx context.Context, in *goods.DeleteGoodsInfo) (*goods.Empty, error) {
	l := logic.NewDeleteGoodsLogic(ctx, s.svcCtx)
	return l.DeleteGoods(in)
}

func (s *GoodsServer) UpdateGoods(ctx context.Context, in *goods.CreateGoodsInfo) (*goods.Empty, error) {
	l := logic.NewUpdateGoodsLogic(ctx, s.svcCtx)
	return l.UpdateGoods(in)
}

func (s *GoodsServer) GetGoodsDetail(ctx context.Context, in *goods.GoodInfoRequest) (*goods.GoodsInfoResponse, error) {
	l := logic.NewGetGoodsDetailLogic(ctx, s.svcCtx)
	return l.GetGoodsDetail(in)
}
