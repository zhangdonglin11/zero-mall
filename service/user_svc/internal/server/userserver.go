// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"
	"zero-mall/service/user_svc/internal/logic"
	"zero-mall/service/user_svc/internal/svc"
	"zero-mall/service/user_svc/types/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) GetUserList(ctx context.Context, in *user.PageInfo) (*user.UserListResponse, error) {
	l := logic.NewGetUserListLogic(ctx, s.svcCtx)
	return l.GetUserList(in)
}

func (s *UserServer) GetUserByMobile(ctx context.Context, in *user.MobileRequest) (*user.UserInfoResponse, error) {
	l := logic.NewGetUserByMobileLogic(ctx, s.svcCtx)
	return l.GetUserByMobile(in)
}

func (s *UserServer) GetUserById(ctx context.Context, in *user.IdRequest) (*user.UserInfoResponse, error) {
	l := logic.NewGetUserByIdLogic(ctx, s.svcCtx)
	return l.GetUserById(in)
}

func (s *UserServer) CreateUser(ctx context.Context, in *user.CreateUserInfo) (*user.UserInfoResponse, error) {
	l := logic.NewCreateUserLogic(ctx, s.svcCtx)
	return l.CreateUser(in)
}

func (s *UserServer) UpdateUser(ctx context.Context, in *user.UpdateUserInfo) (*user.Empty, error) {
	l := logic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

func (s *UserServer) CheckPassWord(ctx context.Context, in *user.PasswordCheckInfo) (*user.CheckResponse, error) {
	l := logic.NewCheckPassWordLogic(ctx, s.svcCtx)
	return l.CheckPassWord(in)
}
